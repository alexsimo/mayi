def versionPropsFile = file('version.properties')
if (versionPropsFile.canRead()) {
  def Properties versionProps = new Properties()
  versionProps.load(new FileInputStream(versionPropsFile))
  def versionName = versionProps['VERSION_NAME'].toString()
  def versionCode = versionProps['VERSION_CODE'].toString()
  project.ext.versionName = versionProps['VERSION_NAME'].toString()
  project.ext.versionCode = versionProps['VERSION_CODE'].toString()
} else {
  throw new GradleException("Could not read version.properties!")
}
group = 'com.alexsimo.mayi'
version = versionName + '.' + versionCode
def artifactId = 'mayi'
def siteUrl = 'https://github.com/alexsimo/mayi'
def gitUrl = 'https://github.com/alexsimo/mayi.git'
def projectName = 'Mayi'
def projectDescription = 'Mayi - Simple library for handlig runtime permissions on Android'

task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}
artifacts {
  archives javadocJar
  archives sourcesJar
}

install {
  repositories.mavenInstaller {
    pom {
      project {
        packaging 'aar'

        name = projectName
        description = projectDescription
        url = siteUrl

        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id 'alexsimo'
            name 'Alexandru V. Simonescu'
            email 'alexandru.simonescu@gmail.com'
          }
        }
        scm {
          connection gitUrl
          developerConnection gitUrl
          url siteUrl
        }
      }
    }
  }
}

bintray {
  user = hasProperty('BINTRAY_USER') ? getProperty('BINTRAY_USER') : System.getenv('BINTRAY_USER')
  key = hasProperty('BINTRAY_KEY') ? getProperty('BINTRAY_KEY') : System.getenv('BINTRAY_KEY')

  configurations = ['archives']
  pkg {
    repo = "maven"
    name = artifactId
    websiteUrl = siteUrl
    vcsUrl = gitUrl
    licenses = ["Apache-2.0"]
    publish = true
    version {
      gpg {
        sign = true
        passphrase = ""
      }
//      mavenCentralSync {
//        sync = true
//        user = hasProperty('OSS_USER') ? getProperty('OSS_USER') : System.getenv('OSS_USER')
//        password = hasProperty('OSS_KEY') ? getProperty('OSS_KEY') : System.getenv('OSS_KEY')
//        close = '1'
//      }
    }
  }
}
